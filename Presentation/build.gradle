apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.frogermcs.androiddevmetrics'
apply plugin: 'project-report'

android {
  compileSdkVersion 25
  buildToolsVersion '25.0.2'
  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"

    renderscriptTargetApi 19
    renderscriptSupportModeEnabled true
  }
  /*abi > version > defaultConfig*/
  flavorDimensions "abi", "version"
  productFlavors {
    pro {
      dimension "version"
      applicationId = "com.smartdengg.presentation.pro"
    }
    free {
      dimension "version"
      applicationId = "com.smartdengg.presentation.free"
    }

    arm {
      dimension "abi"
    }

    mips {
      dimension "abi"
    }

    x86 {
      dimension "abi"
    }
  }

  signingConfigs {
    config {
      keyAlias 'deng'
      keyPassword 'dw206101'
      storeFile file('/Users/SmartDengg/workspace/SmartDengg/ultra-keystore.jks')
      storePassword 'dw206101'
    }
  }

  buildTypes {
    release {
      manifestPlaceholders = [release_label: "${rootProject.ext.release_label}"]
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      debuggable false
      signingConfig signingConfigs.config
    }
    debug {
      manifestPlaceholders = [debug_label  : "${rootProject.ext.debug_label}",
                                release_label: "${rootProject.ext.release_label}"]
      debuggable true
      applicationIdSuffix ".debug"
      versionNameSuffix '.dev'
    }
  }
  sourceSets {
    main {
      res.srcDirs = ['src/main/res-main',
                     'src/main/res-city',
                     'src/main/res-movie']
    }
  }
  //Needed because of this https://github.com/square/okio/issues/58
  lintOptions {
    check 'NewApi', 'HandlerLeak'
    abortOnError false
    warning 'InvalidPackage'
    fatal 'UnusedResources'
  }

  packagingOptions {
    exclude 'proguard-project.txt'
    exclude 'project.properties'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/DEPENDENCIES'
  }
}

configurations {
  proDebugCompile
}

android.applicationVariants.all { variant ->
  variant.outputs.each { output ->
    if (output.zipAlign != null) {
      output.zipAlign.doLast {
        output.zipAlign.inputFile.delete()
      }
    }
  }
}

// Trigger build type (as soon as possible) and make some action via corresponding tasks
project.afterEvaluate {
  tasks.all { task ->
    if (task.name =~ /check.*Manifest/) {
      if (task.name =~ /[dD]ebug/) {
        task.dependsOn(onDebugTypeTriggered)
      } else {
        task.dependsOn(onReleaseTypeTriggered)
      }
    }
  }
}

task onDebugTypeTriggered << {
  rootProject.ext.variantRelease = false
}

task onReleaseTypeTriggered << {
  rootProject.ext.variantRelease = true
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  /*Google Library*/
  compile 'com.android.support:design:25.0.0'
  compile 'com.android.support:cardview-v7:25.0.0'
  /*Square Library*/
  compile 'com.jakewharton:butterknife:8.4.0'
  apt 'com.jakewharton:butterknife-compiler:8.4.0'
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  /*ReactiveX Library*/
  compile 'com.trello:rxlifecycle-components:0.4.0'
  compile 'io.reactivex:rxandroid:1.1.0'
  compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'
  compile 'com.github.SmartDengg:RxDebounceClick:0.0.1'
  /*Facebook Library*/
  debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.0'
  debugCompile 'com.facebook.stetho:stetho:1.3.0'

  compile project(':Model')
}

task showCache() {
  doLast {
    configurations.compile.each { println(it) }
  }
}

showCache.doFirst { println "---------------------- Cache List ----------------------" }

task list(dependsOn: configurations.compile) {
  doLast {
    println "classpath = ${configurations.compile.collect { File file -> file.name }}"
  }
}